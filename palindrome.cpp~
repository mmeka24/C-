#include <iostream> 
#include <cstring>
#include <cstdlib>

using namespace std;



bool issame(char input[], int length, int left_index, int right_index){
    if (left_index < length and left_index != right_index){
        int front = (bool)isalnum(input[left_index]);//we dont remove the punctuation, we just skip the punctuation because it is not alphanumeric and check the next item in the cstring
	cout << front << endl; 
        int back = (bool) isalnum(input[right_index]);//check if alphanumeric and divide by eight to normalize
        if(front + back == 2 and tolower(input[left_index]) != tolower(input[right_index])){
                return false;//if unequal return false
        }
        else (front + back == 0){
                return issame(input, length, left_index + 1, right_index - 1);
        }
        /*else{//close in on both sides checking if equal
                return issame(input, length, left_index + back, right_index - front);
		cout << left_index << endl; 
		cout << right_index << endl; 

	}*/
    }
    return true;
}
int main(){
    char input[80];//grab input
    cin.get(input, 80);
    bool palindrome = issame(input, strlen(input), 0, strlen(input)-1);
    if (palindrome){//use palindrome function to check
        cout << "It is a palindrome"<<endl;
    }
    else{
        cout << "It is not a palindrome"<<endl;
    }
    return 0;
}



//Stuff is down 

/*int main(){

        char wordInput[80];
	char word[80];

	int j = 0;
	char backward[80];
	char ch;
	// Initializes variables
	cout << "Enter a set of letters to see if it is a palindrome: ";
	cin.getline(wordInput, 80);
	// Gets input
	cout << "\n";
	
	// For loop below removes everything but characters between a and z
	for(int i = 0; wordInput[i] != '\0'; i++) {
	
	if((wordInput[i] >= 'a' && wordInput[i] <= 'z') ||(wordInput[i] >= 'A' && wordInput[i] <= 'Z')) {
	ch = wordInput[i];
	word[j++] = ch;	
	}	
		
}

	word[j] = '\0';
	// Loop beow converts all of the uppercase to lowercase
	for(int i = 0; word[i] != '\0'; i++) {
		if(word[i] >= 'A' && word[i] <= 'Z') {
			
			word[i] = word[i] + 32;
		}

	}
	
		// Loop below puts the input into another char array backward
	for(int i = 0; word[i] != '\0'; ++i) {
		ch = word[i];
		backward[strlen(word)-i-1] = ch;
		
	}
	
	// Compares the normal char array and backward char array to see if they're equal
	if(strcmp(word, backward) == 0) {
		cout << "Palindrome\n";
	} else {
		cout << "Not a palindomre\n";
	}



	}*/
